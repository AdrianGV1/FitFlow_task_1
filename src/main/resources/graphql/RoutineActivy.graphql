extend type Query{
    routineActivityById(id: ID!): RoutineActivity
    routineActivities(page: Int!, size: Int!): RoutineActivityPage!
    routineActivitiesByRoutine(routineId: ID!, page: Int!, size: Int!): RoutineActivityPage!
    routineActivitiesByHabit(habitId: ID!, page: Int!, size: Int!): RoutineActivityPage!
}

extend type Mutation{
    createRoutineActivity(input: RoutineActivityCreateInput!): RoutineActivity!
    updateRoutineActivity(id: ID!, input: RoutineActivityUpdateInput!): RoutineActivity!
    deleteRoutineActivity(id: ID!): Boolean!
}

type RoutineActivity {
  id: ID!
  routineId: ID!
  habitId: ID!
  duration: Int
  notes: String
}

input RoutineActivityCreateInput {
  routineId: ID!
  habitId: ID!
  duration: Int
  notes: String
}

input RoutineActivityUpdateInput {
  routineId: ID
  habitId: ID
  duration: Int
  notes: String
}

type RoutineActivityPage {
  content: [RoutineActivity!]!
  totalElements: Int!
  totalPages: Int!
  pageNumber: Int!
  pageSize: Int!
}