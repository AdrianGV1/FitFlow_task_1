scalar Long

enum Module { RUTINAS, ACTIVIDADES, GUIAS, PROGRESO, RECORDATORIOS }

extend type Query {
  userById(id: ID!): User
  users(page: Int!, size: Int!, keyword: String): UserPage!
}

extend type Mutation {
  createUser(input: UserCreateInput!): User!
  updateUser(id: ID!, input: UserUpdateInput!): User!
  deleteUser(id: ID!): Boolean!
  login(email: String!, password: String!): AuthToken!
}

type User {
  id: ID!
  username: String!
  email: String!
  roles: [Role!]!
}

type Role {
  id: ID!
  module: Module!
  permission: Permission!
}

input UserCreateInput {
  username: String!
  password: String!
  email: String!
  roleIds: [ID!]!
  favoriteHabitIds: [ID!]
}

input UserUpdateInput {
  username: String
  password: String
  email: String
  roleIds: [ID!]
  favoriteHabitIds: [ID!]
}

type AuthToken {
  token: String!
  expiresAt: Long!
  user: User!
}

type UserPage {
  content: [User!]!
  totalElements: Int!
  totalPages: Int!
  pageNumber: Int!
  pageSize: Int!
}